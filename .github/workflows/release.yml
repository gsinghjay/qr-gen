name: Release

# Add these permission settings
permissions:
  contents: write      # Required for creating releases
  pull-requests: write # Required for creating release PRs
  issues: write       # Required for creating release notes

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)')"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.8.5

    - name: Install dependencies
      run: |
        poetry install --with dev

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global --add safe.directory "$GITHUB_WORKSPACE"

    - name: Update version
      run: |
        poetry run cz bump --yes --changelog-format angular
      env:
        GIT_COMMITTER_NAME: "github-actions[bot]"
        GIT_COMMITTER_EMAIL: "github-actions[bot]@users.noreply.github.com"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: steps.tag_version.outputs.tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.tag }}
        name: Release ${{ steps.tag_version.outputs.tag }}
        body: |
          ## What's Changed
          ${{ steps.tag_version.outputs.changelog }}

          ## Installation
          ```bash
          poetry add qr-gen@${{ steps.tag_version.outputs.tag }}
          ```
